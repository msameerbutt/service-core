version: '3.7'

networks:
  dev-stack:

services:
  # nginx Service
  web:
    image: ${APP_BASE}/nginx:latest
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/nginx 
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ${APP_ROOT}/app:${APP_WORKING_DIR}:delegated
      - ${PWD}/stack/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/stack/nginx/php-fpm.conf:/etc/nginx/php-fpm.conf
      - ${PWD}/stack/nginx/server.conf:/etc/nginx/server.conf
      - ${PWD}/stack/nginx/ssl/:/etc/nginx/ssl/
      - ${AAP_LOGS}/nginx/:/var/log/nginx/      
    depends_on:
      - php
      - mysql
    networks:
      - dev-stack  
      
  # PHP Service
  php:
    image: ${APP_BASE}/php
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/php   
      args:
        WORKDIR: ${APP_WORKING_DIR}
    container_name: php
    volumes:
      - ${APP_ROOT}/app:${APP_WORKING_DIR}:delegated
      - ${PWD}/stack/php/conf/custom.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ${PWD}/stack/php/conf/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - dev-stack

  # PHP Artisan Service
  artisan:
    image: ${APP_BASE}/artisan:latest
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/php
      args:
        WORKDIR: ${APP_WORKING_DIR}  
    container_name: artisan
    volumes:
      - ${APP_ROOT}/app:${APP_WORKING_DIR}:delegated
    depends_on:
      - mysql
    working_dir: ${APP_WORKING_DIR}
    user: ${APP_USER}
    entrypoint: ['php', '${APP_WORKING_DIR}/artisan']
    networks:
      - dev-stack

  # Mysql Server 
  mysql:
    image: ${APP_BASE}/mysql:latest
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/mysql 
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ${APP_DATA}/mysql/data:/var/lib/mysql:delegated
      - ./mysql/etc/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf:cached      
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - dev-stack
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE - Prevents mbind: Operation not permitted

   # Node Service
  npm:
    image: ${APP_BASE}/node:latest
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/node   
    container_name: npm
    volumes:
      - ${APP_ROOT}/app:${APP_WORKING_DIR}
    working_dir: ${APP_WORKING_DIR}
    entrypoint: ['npm']
    networks:
      - dev-stack

  # Composer Service
  composer:
    build:
      dockerfile: dockerfile
      context: ${PWD}/stack/composer    
    container_name: composer
    volumes:
      - ${APP_ROOT}/app:${APP_WORKING_DIR}
    working_dir: ${APP_WORKING_DIR}
    depends_on:
      - php
    user: ${APP_USER}
    networks:
      - dev-stack
    entrypoint: ['composer', '--ignore-platform-reqs']        